openapi: 3.1.0
info:
  title: Mapache MCP Bridge
  version: 1.1.2
servers:
  - url: https://mapache-mcp-bridge-production.up.railway.app
paths:
  /healthz:
    get:
      operationId: healthz
      responses:
        "200":
          description: ok
          content:
            text/plain:
              schema:
                type: string

  /tools:
    get:
      operationId: tools
      description: List connected MCP servers/tools.
      responses:
        "200":
          description: Tool list
          content:
            application/json:
              schema:
                type: object
                properties:
                  hosted:
                    type: array
                    items:
                      type: object
                  streamable:
                    type: array
                    items:
                      type: object
                  count:
                    type: integer

  /run:
    post:
      operationId: run
      description: Run an MCP-enabled agent against the user's prompt.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [prompt]
              properties:
                prompt:
                  type: string
                  description: The user's instruction for the agent.
      responses:
        "200":
          description: Agent response
          content:
            application/json:
              schema:
                type: object
                properties:
                  output:
                    type: string
                  toolEvents:
                    type: array
                    items: { type: object }
                  citations:
                    type: array
                    items: { type: object }

  /linear/teams:
    get:
      operationId: linearTeams
      description: List Linear teams for discovery.
      responses:
        "200":
          description: Teams
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:   { type: string }
                    key:  { type: string }
                    name: { type: string }
                    url:  { type: string, format: uri }

  /linear/issueCreate:
    post:
      operationId: linearIssueCreate
      description: Create a Linear issue in the team's Backlog (deterministic fallback).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [teamId, title]
              properties:
                teamId: { type: string }
                title:  { type: string }
                description: { type: string }
                labels:
                  type: array
                  items: { type: string }
                priority:
                  type: integer
                  minimum: 0
                  maximum: 4
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean }
                  issue:
                    type: object
                    properties:
                      id:         { type: string }
                      identifier: { type: string }
                      title:      { type: string }
                      url:        { type: string, format: uri }
